ALBUMENTATION_AUG_PATH: null
ANNOT_PATH: ./dataset/coco_2/coco_data/coco_annotations.json
BACKGROUND_DIR: null
IMAGE_PATH: ./dataset/coco_2/coco_data
TRAIN_MODEL_NAME: new_baselines/mask_rcnn_R_101_FPN_400ep_LSJ.py
dataloader:
  evaluator: {_target_: detectron2.evaluation.COCOEvaluator, dataset_name: coco_2017_val}
  test:
    _target_: detectron2.data.build_detection_test_loader
    dataset: {_target_: detectron2.data.get_detection_dataset_dicts, filter_empty: false, names: null}
    mapper:
      _target_: detectron2.data.DatasetMapper
      augmentations:
      - {_target_: detectron2.data.transforms.ResizeShortestEdge, max_size: 1333, short_edge_length: 800}
      image_format: BGR
      is_train: false
    num_workers: 4
  train:
    _target_: detectron2.data.build_detection_train_loader
    dataset: {_target_: detectron2.data.get_detection_dataset_dicts, names: new_baselines/mask_rcnn_R_101_FPN_400ep_LSJ.py}
    mapper:
      _target_: detectron2.data.DatasetMapper
      augmentations:
      - {_target_: detectron2.data.transforms.ResizeScale, max_scale: 2.0, min_scale: 0.1, target_height: 1024, target_width: 1024}
      - _target_: detectron2.data.transforms.FixedSizeCrop
        crop_size: [1024, 1024]
      - {_target_: detectron2.data.transforms.RandomFlip, horizontal: true}
      image_format: BGR
      is_train: true
      recompute_boxes: true
      use_instance_mask: true
    num_workers: 4
    total_batch_size: 2
lr_multiplier:
  _target_: detectron2.solver.WarmupParamScheduler
  scheduler:
    _target_: fvcore.common.param_scheduler.MultiStepParamScheduler
    milestones: [655556, 710184]
    num_updates: 737500
    values: [1.0, 0.1, 0.01]
  warmup_factor: 0.067
  warmup_length: 0.002711864406779661
model:
  _target_: detectron2.modeling.GeneralizedRCNN
  backbone:
    _target_: detectron2.modeling.FPN
    bottom_up:
      _target_: detectron2.modeling.ResNet
      freeze_at: 0
      out_features: [res2, res3, res4, res5]
      stages: {_target_: detectron2.modeling.ResNet.make_default_stages, depth: 101, norm: SyncBN, stride_in_1x1: true}
      stem: {_target_: detectron2.modeling.backbone.BasicStem, in_channels: 3, norm: SyncBN, out_channels: 64}
    in_features: [res2, res3, res4, res5]
    norm: SyncBN
    out_channels: 256
    top_block: {_target_: detectron2.modeling.backbone.fpn.LastLevelMaxPool}
  input_format: BGR
  pixel_mean: [103.53, 116.28, 123.675]
  pixel_std: [1.0, 1.0, 1.0]
  proposal_generator:
    _target_: detectron2.modeling.proposal_generator.RPN
    anchor_generator:
      _target_: detectron2.modeling.anchor_generator.DefaultAnchorGenerator
      aspect_ratios: [0.5, 1.0, 2.0]
      offset: 0.0
      sizes:
      - [32]
      - [64]
      - [128]
      - [256]
      - [512]
      strides: [4, 8, 16, 32, 64]
    anchor_matcher:
      _target_: detectron2.modeling.matcher.Matcher
      allow_low_quality_matches: true
      labels: [0, -1, 1]
      thresholds: [0.3, 0.7]
    batch_size_per_image: 256
    box2box_transform:
      _target_: detectron2.modeling.box_regression.Box2BoxTransform
      weights: [1.0, 1.0, 1.0, 1.0]
    head:
      _target_: detectron2.modeling.proposal_generator.StandardRPNHead
      conv_dims: [-1, -1]
      in_channels: 256
      num_anchors: 3
    in_features: [p2, p3, p4, p5, p6]
    nms_thresh: 0.7
    positive_fraction: 0.5
    post_nms_topk: [1000, 1000]
    pre_nms_topk: [2000, 1000]
  roi_heads:
    _target_: detectron2.modeling.StandardROIHeads
    batch_size_per_image: 512
    box_head:
      _target_: detectron2.modeling.roi_heads.FastRCNNConvFCHead
      conv_dims: [256, 256, 256, 256]
      conv_norm: null
      fc_dims: [1024]
      input_shape: !!python/object/new:detectron2.layers.shape_spec.ShapeSpec [256, 7, 7, null]
    box_in_features: [p2, p3, p4, p5]
    box_pooler:
      _target_: detectron2.modeling.poolers.ROIPooler
      output_size: 7
      pooler_type: ROIAlignV2
      sampling_ratio: 0
      scales: [0.25, 0.125, 0.0625, 0.03125]
    box_predictor:
      _target_: detectron2.modeling.FastRCNNOutputLayers
      box2box_transform:
        _target_: detectron2.modeling.box_regression.Box2BoxTransform
        weights: [10, 10, 5, 5]
      input_shape: !!python/object/new:detectron2.layers.shape_spec.ShapeSpec [1024, null, null, null]
      num_classes: 80
      test_score_thresh: 0.05
    mask_head:
      _target_: detectron2.modeling.roi_heads.MaskRCNNConvUpsampleHead
      conv_dims: [256, 256, 256, 256, 256]
      conv_norm: null
      input_shape: !!python/object/new:detectron2.layers.shape_spec.ShapeSpec [256, 14, 14, null]
      num_classes: 80
    mask_in_features: [p2, p3, p4, p5]
    mask_pooler:
      _target_: detectron2.modeling.poolers.ROIPooler
      output_size: 14
      pooler_type: ROIAlignV2
      sampling_ratio: 0
      scales: [0.25, 0.125, 0.0625, 0.03125]
    num_classes: 80
    positive_fraction: 0.25
    proposal_matcher:
      _target_: detectron2.modeling.matcher.Matcher
      allow_low_quality_matches: false
      labels: [0, 1]
      thresholds: [0.5]
optimizer:
  _target_: torch.optim.SGD
  lr: 0.1
  momentum: 0.9
  params: {_target_: detectron2.solver.get_default_optimizer_params, weight_decay_norm: 0.0}
  weight_decay: 4.0e-05
train:
  amp: {enabled: true}
  checkpointer: {max_to_keep: 100, period: 5000}
  ddp: {broadcast_buffers: false, find_unused_parameters: false, fp16_compression: true}
  device: cuda
  eval_period: 5000
  init_checkpoint: ''
  log_period: 20
  max_iter: 737500
  output_dir: ./output
